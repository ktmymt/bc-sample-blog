import { css } from '@emotion/react'
import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { Style } from './top.style'
import { topGirlImgSrc, questionImgSrc, rightArrowImgSrc } from '@/images'
import { colors } from '@/styles/colors.style'

type Props = {
  data: {
    id: number
    attributes: {
      title: string
      content: string
      createdAt: string
      updatedAt: string
      publishedAt: string
    }
  }[]
}

const Top: NextPage<Props> = ({ data }) => {
  // console.log(data)
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main css={Style.wrapper}>
        <div css={Style.fvWrapper}>
          <h1 css={Style.h1}>
            転職したい、
            <br />
            でも方法が分からない。 <br />
            そんなあなたに
          </h1>
          <h2 css={Style.h2}>
            転職サイト・転職エージェントをまとめたサイトです。
            <br />
            必要な時に必要なものだけ。
          </h2>
        </div>

        <div css={Style.diagnoseWrapper}>
          <p>Pick Up!</p>
          <p css={Style.textWhite}>自分にあった転職サイトを見つける</p>

          <div css={Style.diagnoseContent}>
            <p>Q. 今すぐ転職しようと考えていますか？</p>
            <Image src={topGirlImgSrc} width={100} height={100} alt="girl" />
            <Link href="#">
              <a css={Style.diagnoseButton}>自分に合った転職サイトを診断する</a>
            </Link>
          </div>
        </div>

        <div css={Style.sectionWrapper}>
          <section css={Style.section}>
            <SectionTitle text="転職ガイド" />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
          </section>
          <section css={Style.section}>
            <SectionTitle text="転職サイト・エージェントの利用ガイド" />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
            <ArticleLinkButton
              to="#"
              text="自分に合った仕事とは"
              isQuestion={true}
            />
          </section>
          <section css={Style.section}>
            <SectionTitle text="転職サイト紹介記事" />
            <ArticleLinkButton
              to="#"
              text={`おすすめの転職サイトを状況別に比較\n ～自分に合ったサービスとは～`}
            />
            <ArticleLinkButton
              to="#"
              text={`おすすめの転職エージェントを状況別に比較\n ～より最適なサービスの選び方～`}
            />
            <ArticleLinkButton
              to="#"
              text={`SEなどITエンジニアに人気の転職サイト・エージェントを比較（ハフコレ）`}
            />
          </section>
        </div>
      </main>
    </div>
  )
}

const ArticleLinkButton = ({
  to,
  text,
  isQuestion,
}: {
  to: string
  text: string
  isQuestion?: boolean
}) => {
  const style = {
    wrapper: css`
      background-color: ${colors.white};
      box-shadow: 0px 3px 4px rgba(0, 0, 0, 0.06);
      border-radius: 8px;
      padding: 24px 16px;
      margin: 12px auto 0;
      width: 90%;
    `,
    link: css`
      display: grid;
      grid-template-columns: ${isQuestion ? '50px 4fr 15px' : '4fr 15px'};
      text-align: left;
      font-weight: 600;
      font-size: 15px;
      line-height: 30px;
      white-space: pre-wrap;
    `,
  }

  return (
    <div css={style.wrapper}>
      <Link href={to}>
        <a css={style.link}>
          {isQuestion && (
            <Image src={questionImgSrc} width={30} height={30} alt="" />
          )}
          {text}
          <Image src={rightArrowImgSrc} width={15} height={15} alt="" />
        </a>
      </Link>
    </div>
  )
}

const SectionTitle = ({ text }: { text: string }) => {
  const style = {
    span: css`
      color: ${colors.main};
    `,
    h3: css`
      font-weight: 600;
      font-size: 18px;
      line-height: 29px;
    `,
  }

  return (
    <>
      <span css={style.span}>Guide</span>
      <h3 css={style.h3}>{text}</h3>
    </>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const data = await (await fetch('http://localhost:1337/api/articles')).json()
  return {
    props: data,
  }
}

export default Top
